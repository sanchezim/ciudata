version: "3.8"
services:

  php:
    build:
      context: ./
      dockerfile: Dockerfile
    image: php-${APP_NAME}
    container_name: php-${APP_NAME}
    restart: unless-stopped
    # command: ["service supervisor start"]
    tty: true
    working_dir: ${WORKING_DIR}
    volumes:
      - ./src:/var/www
      - ./config/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - app-network
  
  mysql:
    image: mysql
    container_name: mysql-${APP_NAME}
    hostname: mysql-${APP_NAME}
    restart: always
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:3306
    expose:
      - '3306'
    volumes:
      # - ./config/mysql/schemas:/var/lib/mysql
      - volume-app:/var/lib/mysql
    networks:
      - app-network    
  
  nginx:
    image: nginx
    hostname: web-${APP_NAME}
    container_name: web-${APP_NAME}
    restart: unless-stopped
    ports:
      - ${PORT_NGNIX}:80
    volumes:
      - ./src:/var/www
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - app-network
  
  redis-horizon:
    image: redis
    container_name: redis-horizon-${APP_NAME}
    hostname: redis-${APP_NAME}
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
      - REDIS_HOSTS=local:redis-horizon-${APP_NAME}:6379
    command: ["redis-server","--appendonly","yes"]
    expose:
      - "6379"
    volumes:
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network
    restart: always

  redis-commander-horizon:
        image: rediscommander/redis-commander
        container_name: redis-commander-horizon-${APP_NAME}
        environment:
            - REDIS_HOSTS=local:redis-${APP_NAME}:6379
        hostname: redis-commander-horizon-${APP_NAME}
        networks:
            - app-network
        ports:
            - ${PORT_REDIS}:8081
        depends_on:
            - redis
        restart: always

networks:
  app-network:
    name: ${APP_NAME}-network
volumes:
  schemas: {}
  volume-app:
    name: ${APP_NAME}-volume